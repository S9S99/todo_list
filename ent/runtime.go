// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/S9S99/todo_list/ent/schema"
	"github.com/S9S99/todo_list/ent/todo"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	todoFields := schema.Todo{}.Fields()
	_ = todoFields
	// todoDescProgress is the schema descriptor for progress field.
	todoDescProgress := todoFields[4].Descriptor()
	// todo.DefaultProgress holds the default value on creation for the progress field.
	todo.DefaultProgress = todoDescProgress.Default.(uint8)
	// todo.ProgressValidator is a validator for the "progress" field. It is called by the builders before save.
	todo.ProgressValidator = func() func(uint8) error {
		validators := todoDescProgress.Validators
		fns := [...]func(uint8) error{
			validators[0].(func(uint8) error),
			validators[1].(func(uint8) error),
		}
		return func(progress uint8) error {
			for _, fn := range fns {
				if err := fn(progress); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// todoDescCreatedAt is the schema descriptor for created_at field.
	todoDescCreatedAt := todoFields[5].Descriptor()
	// todo.DefaultCreatedAt holds the default value on creation for the created_at field.
	todo.DefaultCreatedAt = todoDescCreatedAt.Default.(func() time.Time)
	// todoDescUpdatedAt is the schema descriptor for updated_at field.
	todoDescUpdatedAt := todoFields[6].Descriptor()
	// todo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	todo.DefaultUpdatedAt = todoDescUpdatedAt.Default.(func() time.Time)
}
